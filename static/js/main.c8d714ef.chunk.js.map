{"version":3,"sources":["components/styles/animationElements.module.css","components/styles/animationPhonebook.module.css","components/styles/animationError.module.css","redux/types.js","components/contactForm/ContactForm.js","redux/actionCreators.js","components/contactsList/FilterInput.js","components/contactsList/ContactsList.js","components/App.js","redux/reducers.js","redux/store.js","index.js","components/styles/components.module.css"],"names":["module","exports","INITIAL_STATE","name","number","isVisible","isError","ContactForm","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","contacts","some","item","toLowerCase","setTimeout","createdContact","id","shortId","addContact","this","CSSTransition","in","timeout","classNames","animations","onSubmit","className","styles","contactForm","inputLabel","type","onChange","animationError","unmountOnExit","error","Component","connect","contact","Type","payload","FilterInput","handleFilterChange","filterContacts","clearFilterVal","console","log","inputWrapper","placeholder","filterVal","filter","searchResult","deleteContact","length","TransitionGroup","component","map","key","onClick","App","persistConfig","storage","persistedReducer","persistReducer","action","includes","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c8d714ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"animationElements_enter__2GCAJ\",\"enterActive\":\"animationElements_enterActive__1ojWK\",\"exit\":\"animationElements_exit__1SihY\",\"exitActive\":\"animationElements_exitActive__1RJC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"animationPhonebook_enter__2Pu43\",\"enterActive\":\"animationPhonebook_enterActive__19Ubo\",\"exit\":\"animationPhonebook_exit__2DaDr\",\"exitActive\":\"animationPhonebook_exitActive__2MfLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"animationError_enter__17P7T\",\"enterActive\":\"animationError_enterActive__2QrzO\",\"exit\":\"animationError_exit__2pbMx\",\"exitActive\":\"animationError_exitActive__3k-c7\"};","export default {\r\n  ADD_CONTACT: 'ADD_CONTACT',\r\n  DELETE_CONTACT: 'DELETE_CONTACT',\r\n  FILTER_CONTACTS: 'FILTER_CONTACTS',\r\n  CLEAR_FILTER: 'CLEAR_FILTER'\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/actionCreators\";\r\nimport shortId from \"shortid\";\r\nimport styles from \"../styles/components.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport animations from \"../styles/animationPhonebook.module.css\";\r\nimport animationError from \"../styles/animationError.module.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n  isVisible: false,\r\n  isError: false\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isVisible: true\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (name === \"\") {\r\n      return;\r\n    }\r\n    if (\r\n      !this.props.contacts.some(\r\n        item => item.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      const createdContact = { name, number, id: shortId() };\r\n      this.props.addContact(createdContact);\r\n      this.setState({\r\n        ...INITIAL_STATE\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isError: true\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isError: false\r\n        });\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isVisible, isError } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition in={isVisible} timeout={1000} classNames={animations}>\r\n          <h2>Phonebook</h2>\r\n        </CSSTransition>\r\n        <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n          <label className={styles.inputLabel}>\r\n            Name:\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.inputLabel}>\r\n            Number:\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add Contact</button>\r\n        </form>\r\n\r\n        <CSSTransition\r\n          in={isError}\r\n          timeout={500}\r\n          classNames={animationError}\r\n          unmountOnExit\r\n        >\r\n          <div\r\n            className={styles.error}\r\n          >{`Contact ${name} already exists!`}</div>\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts\r\n});\r\n\r\nexport default connect(mapStateToProps, { addContact })(ContactForm);\r\n","import Type from './types';\r\n\r\nexport const addContact = contact => ({\r\n  type: Type.ADD_CONTACT,\r\n  payload: contact\r\n});\r\n\r\nexport const deleteContact = id => ({\r\n  type: Type.DELETE_CONTACT,\r\n  payload: id\r\n});\r\n\r\nexport const filterContacts = filterVal => ({\r\n  type: Type.FILTER_CONTACTS,\r\n  payload: filterVal\r\n});\r\n\r\nexport const clearFilterVal = () => ({\r\n  type: Type.CLEAR_FILTER\r\n});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { filterContacts, clearFilterVal } from '../../redux/actionCreators';\r\nimport styles from '../styles/components.module.css';\r\n\r\nclass FilterInput extends Component {\r\n  handleFilterChange = e => {\r\n    if (e.target.value !== '') {\r\n      this.props.filterContacts(e.target.value);\r\n    } else {\r\n      this.props.clearFilterVal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div className={styles.inputWrapper}>\r\n        <input\r\n          type='text'\r\n          placeholder='Search contacts by name...'\r\n          value={this.props.filterVal}\r\n          onChange={this.handleFilterChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filterVal: state.filter\r\n});\r\n\r\nexport default connect(mapStateToProps, { filterContacts, clearFilterVal })(FilterInput);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/actionCreators\";\r\nimport FilterInput from \"./FilterInput\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport animations from \"../styles/animationElements.module.css\";\r\n\r\nconst ContactsList = ({ contacts, searchResult, deleteContact }) => {\r\n  return (\r\n    <>\r\n      {contacts.length > 1 && <FilterInput />}\r\n      {searchResult.length !== 0 ? (\r\n        <TransitionGroup component=\"ul\">\r\n          {searchResult.map(({ name, number, id }) => (\r\n            <CSSTransition\r\n              key={id}\r\n              classNames={animations}\r\n              timeout={500}\r\n              unmountOnExit\r\n            >\r\n              <li>\r\n                <p>{name}:</p>\r\n                <p>{number}</p>\r\n                <button type=\"button\" onClick={() => deleteContact(id)}>\r\n                  x\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <TransitionGroup component=\"ul\">\r\n          {contacts.map(({ name, number, id }) => (\r\n            <CSSTransition\r\n              key={id}\r\n              classNames={animations}\r\n              timeout={500}\r\n              unmountOnExit\r\n            >\r\n              <li>\r\n                <p>{name}: </p>\r\n                <p>{number}</p>\r\n                <button type=\"button\" onClick={() => deleteContact(id)}>\r\n                  x\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  searchResult: state.searchResult\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteContact })(ContactsList);\r\n","import React from 'react';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactsList from './contactsList/ContactsList';\r\nimport './styles/App.css';\r\n\r\nconst App = () => (\r\n  <>\r\n    <ContactForm />\r\n    <ContactsList />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import Type from './types';\r\n\r\nconst INITIAL_STATE = {\r\n  contacts: [],\r\n  filter: '',\r\n  searchResult: []\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case Type.ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload]\r\n      };\r\n    case Type.DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(item => item.id !== action.payload)\r\n      };\r\n    case Type.FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n        searchResult: state.contacts.filter(item =>\r\n          item.name.toLowerCase().includes(action.payload.toLowerCase())\r\n        )\r\n      };\r\n    case Type.CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: '',\r\n        searchResult: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, applyMiddleware } from 'redux';\r\nimport { reducer } from './reducers';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunk));\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"components_contactForm__2nzUs\",\"inputWrapper\":\"components_inputWrapper__3YdeE\",\"inputLabel\":\"components_inputLabel__2SJR5\",\"error\":\"components_error__2yypR\"};"],"sourceRoot":""}